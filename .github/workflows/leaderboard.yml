name: Update Leaderboard

on:
  repository_dispatch:
    types: [leaderboard-update]

jobs:
  update-leaderboard:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout main repo
      uses: actions/checkout@v2

    - name: Update leaderboard
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}  # You can also use a PAT if necessary
        script: |
          const contributor = context.payload.client_payload.contributor;
          const points = parseInt(context.payload.client_payload.points);

          // Fetch the current leaderboard from the issue
          const issue_number = 1;  // Replace with your leaderboard issue number
          const { data: issue } = await github.rest.issues.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue_number
          });

          // Parse the leaderboard and update the points
          let lines = issue.body.split('\n');
          let tableStart = lines.findIndex(line => line.trim().startsWith('| Rank | Contributor'));
          let tableEnd = lines.findIndex((line, index) => index > tableStart && line.trim() === '');

          if (tableStart === -1 || tableEnd === -1) {
            console.log('Could not find the leaderboard table. Creating a new one.');
            tableStart = lines.findIndex(line => line.includes('Current Rankings:')) + 1;
            lines.splice(tableStart, 0, '| Rank | Contributor | Number of Merged PRs | Total Points |');
            lines.splice(tableStart + 1, 0, '|------|----------------|----------------------|--------------|');
            tableEnd = tableStart + 2;
          }

          let tableLines = lines.slice(tableStart + 2, tableEnd);
          let contributorEntry = tableLines.find(line => line.includes(contributor));

          if (contributorEntry) {
            let parts = contributorEntry.split('|');
            let currentPRs = parseInt(parts[2].trim()) || 0;
            let currentPoints = parseInt(parts[3].trim()) || 0;
            parts[2] = ` ${currentPRs + 1} `;
            parts[3] = ` ${currentPoints + points} `;
            contributorEntry = parts.join('|');
          } else {
            contributorEntry = `| | ${contributor} | 1 | ${points} |`;
            tableLines.push(contributorEntry);
          }

          tableLines.sort((a, b) => {
            let aPoints = parseInt(a.split('|')[3]?.trim()) || 0;
            let bPoints = parseInt(b.split('|')[3]?.trim()) || 0;
            return bPoints - aPoints;
          });

          tableLines = tableLines.map((line, index) => {
            let parts = line.split('|');
            parts[1] = ` ${index + 1} `;
            return parts.join('|');
          });

          lines.splice(tableStart + 2, tableEnd - tableStart - 2, ...tableLines);

          // Update the issue with the new leaderboard
          await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue_number,
            body: lines.join('\n')
          });

          console.log('Leaderboard updated successfully.');
